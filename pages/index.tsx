import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import Link from 'next/link';
/* import { RegexComp } from './components/regexComp'; */
import React from 'react';
import fs from 'fs';
import path from 'path';

/* type Props = {
  websites: string[],
};

export const getStaticProps = async (): Promise<{ props: Props }> => {
  const filePath = path.join(process.cwd(), 'public/assets', 'data.txt');
  const data = fs.readFileSync(filePath, 'utf-8');
  const regex = /^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i;
  const websites = data
    .split('\n')
    .filter((line) => regex.test(line.trim()))
    .map((line) => line.trim());

  return {
    props: {
      websites,
    },
  };
}; */

type Props = {
  websites: string[],
};

const fetchPublicSuffixList = async (): Promise<string[]> => {
  const cachedData = localStorage.getItem('publicSuffixList');
  if (cachedData) {
    return JSON.parse(cachedData);
  }

  const response = await fetch('https://publicsuffix.org/list/public_suffix_list.dat');
  const data = await response.text();
  const websites = data
    .split('\n')
    .filter((line) => !line.startsWith('//') && !line.startsWith('!') && line.trim() !== '')
    .map((line) => line.trim());

  localStorage.setItem('publicSuffixList', JSON.stringify(websites));
  return websites;
};

export const getStaticProps = async (): Promise<{ props: Props }> => {
  const websites = await fetchPublicSuffixList();

  const filePath = path.join(process.cwd(), 'public/assets', 'data.txt');
  const data = fs.readFileSync(filePath, 'utf-8');
  const regex = /^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i;
  const filteredWebsites = data
    .split('\n')
    .filter((line) => regex.test(line.trim()))
    .map((line) => line.trim())
    .filter((website) => {
      const parts = website.split('.');
      const domain = parts.slice(-2).join('.');
      const suffixes = parts.slice(0, -2).concat('').map((_, i, arr) => arr.slice(i).join('.'));
      return websites.includes(domain) || suffixes.some((suffix) => websites.includes(suffix));
    });

  return {
    props: {
      websites: filteredWebsites,
    },
  };
};


/* export const getStaticProps = async () => {
  const data = fs.readFileSync('public\assets\data.txt', 'utf-8');
  const websites = data.match(/^[^/].*/ /* gm)?.map((line) => line.trim()) ?? [];
  return {
    props: { websites },
  };
}; */

/* const IndexPage: React.FC<Props> = ({ websites }) => {
  return (
    <div>
      {websites.map((website, index) => (
        <div key={index}>{website}</div>
      ))}
    </div>
  );
}; */

/* export const RegexComp = ({ websites }) => {
  // Render the websites
  return (
    <div>
      {websites.map((website, index) => (
        <div key={index}>{website}</div>
      ))}
    </div>
  );
}; */

export default function Home({ websites }: Props) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p> COOOKIES!!</p>
          <p> LÃ¤s Readme.md</p>
          <Link href="/faq">Faq</Link>
        </div>




        <div id={styles.websiteContainer}>
          <div>
            {websites.map((website: any, index: any) => (
              <div key={index}>{website}</div>
            ))}
          </div>
        </div> 
      </main>
    </>
  );
}
